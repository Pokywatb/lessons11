//package lesson8;
////оператор final
////если указываем с классом - запрещаем наследование от класса. Не сможем создать наследование.
//
//
//public class CalcUtils {
//    // значения свойств объявленных как final должны быть указаны либо сразу при объявлении либо в конструкторе
//    // значения для final свойств нельзя изменить
//    // констаны записываются в верхнем регистре, каждое следующиее слово через нижнее подчеркивание PI_VAR
//    // константы обычно и static и final.
//
//
//    final double PI = 3.14;//пример
//
//
//    //final методы нельзя переопределять в дочерних классах.
//    //final аргументы доступны только для чтения.(прочитать можем, изменить не можем)
//    public final void someVoid(final int num, final SomeClass sc, final int[] arr{
//        System.out.println(num);)
//        System.out.println(sc);
//        System.out.println(sc.name);
//        sc.name = "New Name";
//        sc = new SomeClass();// внутри класса все можно менять
//        arr[4] = 34; //любой элемент массива доступен для изменения
//    }
//
//    class SomeClass{
//        String name;
//    }
//// оператор static
//    // static свойства и методы принадлежат классам, а не объектам. (
//    // статические методы используются как вспомогательные методы и как фабричные методв(методы которые создают объекты)
//    // статический блок - исп для работы со статическими свойствами. Загружается в память один раз, когда загружается класс.
//    // в статических методах нельзя обращаться к не статическим свойствам и методам.
//
//    static double PI;
//    public static int summ(int a, int b){
//        return a+b;
//    }
//
//
//}
